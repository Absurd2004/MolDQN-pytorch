_wandb:
    value:
        cli_version: 0.21.0
        e:
            0l4vmnk776ga1fd1ndjbmpoaqhww327k:
                args:
                    - --model_dir=./mol_dqn/save_protect_initial
                    - --hparams=./mol_dqn/chemgraph/configs/naive_dqn.json
                    - --start_molecule
                    - C1=CC2=CC5=CC=C(C=C4C=CC(C=C3C=CC(=CC1=N2)N3)=N4)N5
                    - --wandb_run_name
                    - protect_porphyrin_run-1
                    - --use_wandb
                    - "True"
                codePath: mol_dqn/chemgraph/optimize_qed.py
                codePathLocal: mol_dqn/chemgraph/optimize_qed.py
                cpu_count: 16
                cpu_count_logical: 32
                cudaVersion: "12.1"
                disk:
                    /:
                        total: "1618119405568"
                        used: "1431912124416"
                email: yongkunyang11@gmail.com
                executable: /home/yangyongkun/miniconda3/envs/moldqn/bin/python
                git:
                    commit: 188ba9990c4ed08a9bc490bcfec138105e9bd6ae
                    remote: git@github.com:Absurd2004/MolDQN-pytorch.git
                gpu: NVIDIA GeForce RTX 2080 Ti
                gpu_count: 4
                gpu_nvidia:
                    - architecture: Turing
                      cudaCores: 4352
                      memoryTotal: "11811160064"
                      name: NVIDIA GeForce RTX 2080 Ti
                      uuid: GPU-3b0efb97-00c1-078f-e6f3-87d2e863bc2f
                    - architecture: Turing
                      cudaCores: 4352
                      memoryTotal: "11811160064"
                      name: NVIDIA GeForce RTX 2080 Ti
                      uuid: GPU-2684b786-aa17-4fd4-b339-4ded3feae7f8
                    - architecture: Turing
                      cudaCores: 4352
                      memoryTotal: "11811160064"
                      name: NVIDIA GeForce RTX 2080 Ti
                      uuid: GPU-5cbd237d-2bf5-b8b2-5df8-8b1182d142f0
                    - architecture: Turing
                      cudaCores: 4352
                      memoryTotal: "11811160064"
                      name: NVIDIA GeForce RTX 2080 Ti
                      uuid: GPU-264afd55-802e-993f-198c-66dfc41a15cb
                host: user-Super-Server
                memory:
                    total: "270342848512"
                os: Linux-5.4.0-135-generic-x86_64-with-glibc2.28
                program: /home/yangyongkun/MolDQN-pytorch/./mol_dqn/chemgraph/optimize_qed.py
                python: CPython 3.10.0
                root: /home/yangyongkun/MolDQN-pytorch
                startedAt: "2025-07-26T12:08:07.286221Z"
                writerId: 0l4vmnk776ga1fd1ndjbmpoaqhww327k
        m: []
        python_version: 3.10.0
        t:
            "1":
                - 1
            "2":
                - 1
            "3":
                - 13
                - 16
            "4": 3.10.0
            "5": 0.21.0
            "12": 0.21.0
            "13": linux-x86_64
activation:
    value: relu
allow_bonds_between_rings:
    value: false
allow_no_modification:
    value: true
allow_removal:
    value: true
allowed_ring_sizes:
    value:
        - 5
        - 6
atom_types:
    value:
        - C
        - O
        - "N"
batch_norm:
    value: false
batch_size:
    value: 128
dense_layers:
    value:
        - 1024
        - 512
        - 128
        - 32
discount_factor:
    value: 0.9
double_q:
    value: true
fingerprint_length:
    value: 2048
fingerprint_radius:
    value: 3
gamma:
    value: 1
grad_clipping:
    value: 10
hparams:
    value: ./mol_dqn/chemgraph/configs/naive_dqn.json
learning_frequency:
    value: 4
learning_rate:
    value: 0.0001
learning_rate_decay_rate:
    value: 0.9
learning_rate_decay_steps:
    value: 10000
max_num_checkpoints:
    value: 10
max_steps_per_episode:
    value: 40
model_dir:
    value: ./mol_dqn/save_protect_initial
num_bootstrap_heads:
    value: 0
num_episodes:
    value: 5000
optimizer:
    value: Adam
prioritized:
    value: false
prioritized_alpha:
    value: 0.6
prioritized_beta:
    value: 0.4
prioritized_epsilon:
    value: 1e-06
replay_buffer_size:
    value: 5000
save_frequency:
    value: 200
start_molecule:
    value: C1=CC2=CC5=CC=C(C=C4C=CC(C=C3C=CC(=CC1=N2)N3)=N4)N5
update_frequency:
    value: 20
use_wandb:
    value: true
wandb_project:
    value: mol-dqn
wandb_run_name:
    value: protect_porphyrin_run-1
